version: 2.1

executors:
  node12:
    docker:
      - image: circleci/node:lts
    working_directory: ~/project
  node:
    docker:
      - image: cypress/base:12.6.0
        environment:
          TERM: xterm
    working_directory: ~/project

commands:
  attach-project:
    steps:
      - checkout
      - attach_workspace:
          at: ~/
  store-test-results:
    steps:
      - store_test_results:
          path: reports/junit

  # The initial pipe, |, indicates that there will be more than one line of shell commands.
  release:
    steps:
      - attach-project
      - run:
          name: release
          command: |
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            echo "//registry.yarnpkg.com/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            git fetch --tags
            if [ "$CIRCLE_BRANCH" = "staging" ]; then
              echo "TODO Staging Release Phase / Canary"
            elif [ "$CIRCLE_BRANCH" = "release" ]; then
              yarn lerna publish patch --yes
            else
              echo "Release phase is skipped."
            fi

release_branches: &release_branches
  branches:
    only:
      - staging
      - release

jobs:
  setup:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-1-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile --non-interactive
      - run:
          command: yarn cypress install
      - save_cache:
          key: dependency-cache-1-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules
            - ~/.yarn
            - ~/.cache

      - persist_to_workspace:
          root: /root
          paths:
            - .cache
            - project/node_modules
            - project/@factor/*/node_modules

  lint:
    executor: node
    steps:
      - attach-project
      - run:
          name: Lint
          command: yarn test:lint

  audit:
    executor: node
    steps:
      - attach-project
      - run:
          name: Security Audit
          command: yarn audit || true

  build:
    executor: node
    steps:
      - attach-project
      - run:
          name: Build Fixtures
          command: yarn test:builds --runInBand --collectCoverage && yarn test:coverage -F builds
          environment:
            JEST_JUNIT_OUTPUT_NAME: builds.xml
      - store-test-results
      - persist_to_workspace:
          root: /root
          paths:
            - project/test/builds

  test-integration:
    executor: node
    steps:
      - attach-project
      - run:
          name: Integration Tests
          command: yarn test:integration --runInBand --collectCoverage && yarn test:coverage -F integration
          environment:
            JEST_JUNIT_OUTPUT_NAME: integration.xml
      - store-test-results

  test-unit:
    executor: node
    steps:
      - attach-project
      - run:
          name: Unit Tests
          command: yarn test:unit --runInBand

  test-e2e:
    executor: node
    steps:
      - attach-project
      - run:
          name: e2e
          command: "yarn test:e2e"

  release-version:
    executor: node
    steps:
      - release

workflows:
  version: 2
  commit:
    jobs:
      - setup
      - lint: { requires: [setup] }
      - audit: { requires: [setup] }
      - test-unit: { requires: [setup] }
      - build: { requires: [setup] }
      - test-integration: { requires: [build] }
      - release-version:
          requires: [setup, build, lint, audit, test-unit, test-integration]
          filters:
            <<: *release_branches
  # live:
  #   jobs:
  #     - setup
  #     - test-e2e: { requires: [setup] }
  #   triggers:
  #     - schedule:
  #         cron: "0 5 * * *"
  #         filters:
  #           <<: *release_branches
